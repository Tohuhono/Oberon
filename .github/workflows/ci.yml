name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  deploy_tohuhono:
    name: Deploy Tohuhono
    uses: ./.github/workflows/deploy.yml
    with:
      environment: "${{ ( github.ref == 'refs/heads/main' && github.event_name == 'push' ) && 'production' || 'preview' }}"
    secrets:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.TOHUHONO_VERCEL_ID }}

  deploy_rich_text:
    name: Deploy Rich Text
    uses: ./.github/workflows/deploy.yml
    with:
      environment: "${{ ( github.ref == 'refs/heads/main' && github.event_name == 'push' ) && 'production' || 'preview' }}"
    secrets:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.RICH_VERCEL_ID }}

  deploy_playground:
    name: Deploy Oberon Playground
    uses: ./.github/workflows/deploy.yml
    with:
      environment: "${{ ( github.ref == 'refs/heads/main' && github.event_name == 'push' ) && 'production' || 'preview' }}"
    secrets:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.DEV_PLAYGROUND_VERCEL_ID }}
      TURSO_URL: ${{ secrets.TURSO_URL }}
      TURSO_SECRET: ${{ secrets.TURSO_SECRET }}

  deploy-status:
    name: Deploy Status
    needs: [deploy_tohuhono, deploy_rich_text, deploy_playground]
    if: success() || failure()
    runs-on: ubuntu-latest
    env:
      STATUS: "${{ contains(needs.*.result, 'failure') && 'failed' || 'passed' }}"
      MESSAGE: "Latest deployment available at ${{ needs.deploy.outputs.url }}"
    steps:
      - name: Add preview URL to job summary
        run: |
          echo "${{ env.STATUS == 'failed' && 'Deploy Failed' || env.MESSAGE }}" >> $GITHUB_STEP_SUMMARY
      - name: Add preview URL to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            "${{ env.STATUS == 'failed' && 'Deploy Failed' || env.MESSAGE }}"
      - name: Failing deploy
        if: ${{ env.STATUS == 'failed' }}
        run: exit 1

  # smoke-test:
  #   name: Smoke Test
  #   needs: [deploy]
  #   uses: ./.github/workflows/playwright.yml
  #   with:
  #     url: ${{ needs.deploy.outputs.url }}
  #     tag: "@smoke"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - name: Use pNpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "pnpm"
      - name: Install
        run: pnpm i
      - name: Prettier
        run: pnpm prettier
      - name: Lint
        run: pnpm lint --cache-dir=.turbo
      - name: Types
        run: pnpm tsc --cache-dir=.turbo

  unit-test:
    name: Unit Test
    uses: ./.github/workflows/jest.yml

  #  component-test:
  #    name: Component Test
  #    uses: ./.github/workflows/playwright.yml
  #    with:
  #      url: ""
  #      tag: "@component"

  test-status:
    name: Test Status
    #    needs: [smoke-test, lint, unit-test, component-test]
    needs: [deploy-status, lint, unit-test]
    if: success() || failure()
    runs-on: ubuntu-latest
    env:
      STATUS: "${{ ( contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') ) && 'failed' || 'passed'}}"
    steps:
      - name: Add test status to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          Append: true
          message: |
            Test suite ${{ env.STATUS }}
      - name: Failing deploy
        if: ${{ env.STATUS == 'failed' }}
        run: exit 1

  promote_tohuhono:
    name: Deploy Tohuhono
    needs: [deploy_tohuhono, test-status]
    if: ${{ github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/promote.yml
    secrets:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.TOHUHONO_VERCEL_ID }}
    with:
      url: ${{ needs.deploy_tohuhono.outputs.url }}
      domain: www.tohuhono.com

  promote_rich_text:
    name: Deploy Rich Text
    needs: [deploy_rich_text, test-status]
    if: ${{ github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/promote.yml
    secrets:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.RICH_VERCEL_ID }}
    with:
      url: ${{ needs.deploy_rich_text.outputs.url }}
      domain: puck-rich-text.tohuhono.com

  promote_playground:
    name: Deploy Oberon Playground
    needs: [deploy_playground, test-status]
    if: ${{ github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/promote.yml
    secrets:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_API_TOKEN: ${{ secrets.VERCEL_API_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.DEV_PLAYGROUND_VERCEL_ID }}
    with:
      url: ${{ needs.deploy_rich_text.outputs.url }}
      domain: playground.tohuhono.com
